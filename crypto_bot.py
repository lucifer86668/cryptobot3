import requests
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# Telegram Bot Token
TOKEN = '7417257593:AAE75GK41akngDHtBbR8c8MciVwPlKMg6yQ'

# Binance API URL
BINANCE_API_URL = 'https://api.binance.com/api/v3/ticker/price'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã –∏–∑ Binance API
def get_price_from_binance(symbol: str):
    try:
        response = requests.get(BINANCE_API_URL, params={'symbol': symbol})
        response.raise_for_status()
        data = response.json()
        return float(data['price'])
    except requests.exceptions.RequestException as e:
        print(f"Error fetching data for {symbol}: {e}")
        return None

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã
async def handle_crypto_price(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–∞–Ω–¥—É –±–µ–∑ —Å–∏–º–≤–æ–ª–∞ '/'
    command = update.message.text.strip()[1:].upper()  # –ü—Ä–∏–º–µ—Ä: '/btc' -> 'BTC'
    ticker = f"{command}USDT"  # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–∏–∫–µ—Ä –¥–ª—è Binance (–Ω–∞–ø—Ä–∏–º–µ—Ä, BTCUSDT)

from telegram.ext import MessageHandler, filters

# –§–∏–ª—å—Ç—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥ –≤ –∫–∞–Ω–∞–ª–µ
async def handle_channel_commands(update: Update, context: ContextTypes.DEFAULT_TYPE):
    command = update.message.text.strip()[1:].split('@')[0].upper()  # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—É –±–µ–∑ '@'
    ticker = f"{command}USDT"
    price = get_price_from_binance(ticker)

    if price is not None:
        await update.message.reply_text(f"üí∞ {command} - ${price:.2f}")
    else:
        await update.message.reply_text(f"‚ùå Could not fetch the price for {command}. Please check the ticker.")

# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
application.add_handler(MessageHandler(filters.ChatType.CHANNEL & filters.COMMAND, handle_channel_commands))
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ü–µ–Ω—É
    price = get_price_from_binance(ticker)

    if price is not None:
        await update.message.reply_text(f"üí∞ {command} - ${price:.2f}")
    else:
        await update.message.reply_text(f"‚ùå Could not fetch the price for {command}. Please check the ticker.")

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram
    application = Application.builder().token(TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
    application.add_handler(CommandHandler("btc", handle_crypto_price))  # –î–ª—è Bitcoin
    application.add_handler(CommandHandler("eth", handle_crypto_price))  # –î–ª—è Ethereum
    application.add_handler(CommandHandler("sol", handle_crypto_price))  # –î–ª—è Solana
    application.add_handler(CommandHandler("dot", handle_crypto_price))  # –î–ª—è Polkadot
    application.add_handler(CommandHandler("ada", handle_crypto_price))  # –î–ª—è Cardano
    application.add_handler(CommandHandler("ape", handle_crypto_price))  # –î–ª—è ApeCoin
    application.add_handler(CommandHandler("apt", handle_crypto_price))  # –î–ª—è Aptos
    application.add_handler(CommandHandler("atom", handle_crypto_price))  # –î–ª—è Cosmos

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application.run_polling()

if __name__ == '__main__':
    main()
